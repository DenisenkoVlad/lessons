/* &display=swap */
@import "null.css";
@import url('https://fonts.googleapis.com/css?family=Lato:regular,700,900&display=swap');

body {
	font-family: 'Lato';
	color: #424551;
}

.wrapper {
	min-height: 100%;
	overflow: hidden;
	position: relative;
	display: flex;
	flex-direction: column;
}
.wrapper > main {
	flex-grow: 1;
}
[class*="__container"] {
	max-width: 1260px;
	margin: 0px auto;
	padding: 0px 15px;
}

/* =============================================================== */

.page__block {
	padding: 50px 0px;
}

.block {
	display: flex;
	column-gap: 105px;
	align-items: flex-start;
}

.block__image {
	flex: 0 0 35%;
	margin-top: 67px;
}
.block__image img {
	max-width: 103.7%;
	transform: translate(-3.7%,0px);
}

.block__body {}

.block__label:not(:last-child) {
	margin-bottom: 40px;
}

.label {
	display: flex;
	flex-direction: column;
	color: #1E212C;
	gap: 8px;
}

.label__subtitle {
	letter-spacing: 1px;
	text-transform: uppercase;
	font-weight: 700;
	line-height: 1.5;
}

.label__title {
	font-weight: 900;
	font-size: 46px;
	line-height: 1.3;
}

.block__form {}

.form {
	display: flex;
	flex-wrap: wrap;
	margin: 0px -10px;
	row-gap: 24px;
}

.form__line {
	flex: 0 1 50%;
	padding: 0px 10px;
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
	gap: 8px;
}
.form__line > textarea {
	resize: vertical;
	min-height: 128px;
}

.form__label {
	line-height: 1.6;
	display: inline-block;
}

.form__input {
	width: 100%;
	background: #FFFFFF;
	border: 1px solid #D7DADD;
	border-radius: 4px;
	height: 52px;
	padding: 13px 16px;
}
.form__input:focus {
	outline: 1px solid #FF3F3A;
	box-shadow: 0 0 5px 3px rgba(255, 64, 58, 0.2);
	border-radius: 4px;
}
.form__input::placeholder {
	color: #9A9CA5;
	line-height: 1.6;
}

.form__line--full {
	flex: 1 1 100%;
}

.checkbox {
	position: relative;
	margin-bottom: auto;
}

.checkbox__input {
	width: 0;
	height: 0;
	position: absolute;
	opacity: 0;
}


.checkbox__input:focus + .checkbox__label {
	outline: 1px solid #FF3F3A;
	box-shadow: 0 0 5px 3px rgba(255, 64, 58, 0.2);
	border-radius: 4px;
}

.checkbox__label {
	cursor: pointer;
	display: inline-flex;
	gap: 12px;
}
.checkbox__label::before {
	content: '';
	flex: 0 0 16px;
	width: 16px;
	height: 16px;
	transform: translate(0px,5px);
	border: 1px solid #FF3F3A;
	background-color: #fff;
	border-radius: 3px;
	transition: background-color 0.3s ease 0s;
}

.checkbox__text {
	align-self: center;
	line-height: 1.6;
}

.checkbox__input:checked + .checkbox__label::before {
	background: #FF3F3A url('../img/check.svg') center / 10px 8px no-repeat;
}

.button {
	position: relative;
	color: #FFFFFF;
	letter-spacing: 0.5px;
	font-weight: 700;
	padding: 14px 15px;
	line-height: 1.5;
	background: linear-gradient(55.95deg, #FF3F3A 0%, #F75E05 100%);
	border-radius: 4px;
	margin-bottom: auto;
	/*
	Ситуація наступна: я будував структуру label+input в контейнер flex,
	щоб при збільшенні лейблу інші лейбли в колонках притискались до низу до input,
	тому задав для контейнера form__line   justify-content: flex-end;
	
	В такому випадку button, який підлаштовується під розмір 
	лейблу чекбокса (якщо його збільшити) і опускається на рівень нижнього краю
	лейблу чекбокса

	Я намагався це виправити justify-self для button, але в інтернеті знайшов інфо,
	що так не буде працювати для флекс, тому задав для кнопки margin-bottom: auto;
	також зробив це для .checkbox

	Прошу відповісти, чи правильне таке рішення, чи я щось перемудрив
	і це можна було зробити простіше?
	*/
}
.button::before {
	position: absolute;
	top: 0;
	left: 0;
	content: '';
	width: 100%;
	height: 100%;
	background: linear-gradient(55.95deg, #d8241d 0%, #c24903 100%);
	opacity: 0;
	border-radius: 4px;
}
.button:hover::before, .button:focus::before {
	opacity: 1;
	outline: 1px solid #FF3F3A;
	box-shadow: 0 0 5px 3px rgba(255, 64, 58, 0.2);

}
.button span {
	position: relative;
	z-index: 2;
}
.button:hover span span {
	display: inline-block;
	transform: scale(1.5) translate(0px, 10px);
}





/* ==================================== */
.form__title {
	font-size: 30px;
	font-weight: 700;
	line-height: 1.3;
}
.form__title:not(:last-child) {
	margin-bottom: 10px;
}
.radio-box {
	display: flex;
	position: relative;
	align-self: start;
}



.radio-box__input {
	position: absolute;
	width: 0;
	height: 0;
	opacity: 0;
}

.radio-box__label {
	font-size: 20px;
	font-weight: 700;
	line-height: 1.3;
	display: flex;
	gap: 8px;
	position: relative;
}
.radio-box__label::before, .radio-box__label::after {
 	content: '';
 	flex: 0 0 16px;
 	width: 16px;
 	height: 16px;
	border: 1px solid #FF3F3A;
	transform: translate(0px,4px);
	border-radius: 50%;
}
.radio-box__label::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	background-color: #FF3F3A;
	transform: translate(0px, 4px) scale(0);
	border-radius: 50%;
	transition: transform 0.3s ease 0s;
}
.radio-box__input:checked + .radio-box__label::after {
	transform: translate(0px, 4px) scale(0.6);
}
.radio-box__label span {
	align-self: center;
}
.radio-box__input:focus + .radio-box__label {
	outline: 1px solid #FF3F3A;
	box-shadow: 0 0 5px 3px rgba(255, 64, 58, 0.2);
	border-radius: 4px;
}

/* =================================== */
.checkbox-2 {
	position: relative;
}
.checkbox-2__input {
	width: 0;
	height: 0;
	position: absolute;
	opacity: 0;
}
.checkbox-2__input:focus + .checkbox-2__label {
	outline: 1px solid #FF3F3A;
	box-shadow: 0 0 5px 3px rgba(255, 64, 58, 0.2);
	border-radius: 4px;
}
.checkbox-2__label {
	cursor: pointer;
	display: inline-flex;
	gap: 12px;
	position: relative;
}
.checkbox-2__label::before {
	content: '';
	flex: 0 0 28px;
	width: 28px;
	height: 16px;
	transform: translate(0px, 5px);
	border: 1px solid #FF3F3A;
	border-radius: 10px;
}
.checkbox-2__label::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	flex: 0 0 16px;
	width: 16px;
	height: 16px;
	transform: translate(0px, 5px) scale(0.7);
	background-color: #FF3F3A;
	border-radius: 10px;
	transition: transform 0.3s ease 0s;
}
.checkbox-2__text {
	align-self: center;
	font-weight: 700;
	line-height: 1.6;
}
.checkbox-2__input:checked+.checkbox-2__label::after {
	transform: translate(66.7%, 5px) scale(0.7);
}
